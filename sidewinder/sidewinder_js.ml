(* Generated by: ocaml-crunch
   Creation date: Wed, 14 Feb 2024 19:24:30 GMT *)

module Internal = struct
  let d_403cc189dcec1fe90d3e4e93736dbac1 = "// Generated by Melange\n\n\nvar $$Event = {};\n\nvar $$WebSocket = {};\n\nvar $$Element = {};\n\nvar $$Document = {};\n\nfunction mount(socket, _event) {\n  socket.send(\" \\\"Mount\\\" \");\n}\n\nvar $$event = (function (element, event) {\n  let id = element.getAttribute(\"data-sidewinder-id\");\n  return JSON.stringify({ \"Event\": [id, \"\"] })\n}\n);\n\nfunction handle_click(socket, el, e) {\n  socket.send($$event(el, e));\n}\n\nvar rebind = (function (socket, element) { \n  let elements = [...element.querySelectorAll(\"*[data-sidewinder-id]\")];\n  elements.forEach((el) => {\n    el.addEventListener(\"click\", (ev) => handle_click(socket, el, ev));\n  });\n}\n);\n\nvar patch = (function (event) {\nlet json = JSON.parse(event.data);\nreturn json.Patch[0]\n}\n);\n\nfunction handle_event(socket, element, e) {\n  var diff = patch(e);\n  element.innerHTML = diff;\n  return rebind(socket, element);\n}\n\nvar url = (function (path) {\n  let protocol = window.location.protocol.replace(\"http\", \"ws\");\n  return `${protocol}//${window.location.host}${path}`\n}\n);\n\nfunction spawnRemote(url, element_id) {\n  var element = document.getElementById(element_id);\n  var socket = new WebSocket(url);\n  socket.addEventListener(\"open\", (function (param) {\n          return mount(socket, param);\n        }));\n  socket.addEventListener(\"message\", (function (param) {\n          return handle_event(socket, element, param);\n        }));\n}\n\nfunction spawn(element_id, path) {\n  var url$1 = url(path);\n  spawnRemote(url$1, element_id);\n}\n\nexport {\n  $$Event ,\n  $$WebSocket ,\n  $$Element ,\n  $$Document ,\n  mount ,\n  $$event ,\n  handle_click ,\n  rebind ,\n  patch ,\n  handle_event ,\n  url ,\n  spawnRemote ,\n  spawn ,\n}\n/* No side effect */\n"

  let file_chunks = function
    | "sidewinder_web_runtime.mjs" | "/sidewinder_web_runtime.mjs" -> Some [ d_403cc189dcec1fe90d3e4e93736dbac1; ]
    | _ -> None

  let file_list = [ "sidewinder_web_runtime.mjs"; ]
end

let file_list = Internal.file_list

let read name =
  match Internal.file_chunks name with
  | None -> None
  | Some c -> Some (String.concat "" c)

let hash = function
  | "sidewinder_web_runtime.mjs" | "/sidewinder_web_runtime.mjs" -> Some "403cc189dcec1fe90d3e4e93736dbac1"
  | _ -> None

let size = function
  | "sidewinder_web_runtime.mjs" | "/sidewinder_web_runtime.mjs" -> Some 1671
  | _ -> None
